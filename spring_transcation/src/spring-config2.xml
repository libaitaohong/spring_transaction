<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
      http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context-2.5.xsd
      http://www.springframework.org/schema/tx
      http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">


    <!--引入外部的属性文件-->
    <context:property-placeholder location="classpath*:jdbc.properties"/>
    <!--配置c3p0连接池-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driverClass}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!--配置业务层类-->
    <bean id="accountService" class="demo2.AccountServiceImpl">
        <property name="accountDao" ref="accountDao"/>

    </bean>
    <!--配置DAO类-->
    <bean id="accountDao" class="demo2.AccountDaoImpl">
        <!--注入连接池，因为继承了JdbcDaoSupport类，所以注入连接池后，里面就有了jdbc模板-->
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--配置事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--配置业务层代理-->
    <bean id="accountServiceProxy" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
        <!--配置目标对象，就是我要增强哪个类-->
        <property name="target" ref="accountService"/>
        <!--注入事务管理器，因为真正进行事务管理的是事务管理器-->
        <property name="transactionManager" ref="transactionManager"/>
        <!--注入事务属性-->
        <property name="transactionAttributes">
            <props>
                <!--prop的格式：key是方法名，*代表所有方法
                value： PROPAGATION: 事务的传播性为
                        ISOLATION:   事务的隔离级别
                        readOnly：   只读（不允许进行修改，插入，删除操作）
                        -Exception： 发生哪些异常回滚事务，默认发生任何异常都会回滚
                        +Exception： 发生哪些异常事务不回滚
                        例如：+java.lang.ArithmeticException说明发生这个异常也不会滚，所以钱还是转丢了-->
                <prop key="transfer">PROPAGATION_REQUIRED,+java.lang.ArithmeticException</prop>
            </props>
        </property>
     </bean>

</beans>